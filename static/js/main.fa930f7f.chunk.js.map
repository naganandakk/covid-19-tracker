{"version":3,"sources":["components/header/Header.js","components/footer/Footer.js","components/country-table/TableColumns.js","components/country-table/CountryTable.js","components/world-map/StatsCard.js","components/world-map/SelectedCountryStats.js","components/world-map/WorldMap.js","components/totals-table/TotalsCard.js","components/totals-table/TotalsTable.js","apis/covid19.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","style","padding","React","Component","target","href","numberFormatter","number","toLocaleString","columns","name","selector","sortable","format","row","country","toUpperCase","cases","total","right","active","new","critical","recovered","deaths","CountryTable","TableColumns","data","this","props","statistics","pagination","paginationPerPage","defaultSortField","defaultSortAsc","highlightOnHover","StatsCard","borderRadius","fontSize","fontWeight","margin","title","count","SelectedCountryStats","selectedCountry","Fragment","textTransform","color","backgroundColor","marginBottom","TotalsCard","TotalsTable","totals","client","axios","create","baseURL","interceptors","request","use","headers","App","state","isLoading","fetchData","setState","covid19api","get","then","response","_","find","remove","catch","error","console","log","marginTop","showStats","Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fa930f7f.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Header extends React.Component {\n    render() {\n        return(\n            <div className=\"container-fluid text-center\" style={{\n                padding: '10px'\n            }}>\n                <h3>COVID-19 TRACKER</h3>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from \"react\";\n\nexport default function () {\n    return(\n        <div className=\"container-fluid\">\n            <div className=\"text-center\">\n                <p>Developed by <a target=\"_blank\" href=\"https://github.com/naganandakk\">Nagananda K K</a></p>\n                <p>Powered by <a target=\"_blank\" href=\"https://rapidapi.com\">Rapid API</a></p>\n            </div>\n        </div>\n    )\n}","const numberFormatter = (number) => {\n    if (number) {\n        return number.toLocaleString();\n    } else {\n        return number;\n    }\n}\n\nconst countryFormatter = (country) => {\n    return country.toUpperCase();\n}\n\nconst columns = [\n    {\n        name: 'COUNTRY',\n        selector: 'country',\n        sortable: true,\n        format: row => countryFormatter(row.country),\n    },\n    {\n        name: 'CONFIRMED',\n        selector: 'cases.total',\n        sortable: true,\n        format: row => numberFormatter(row.cases.total),\n        right: true\n    },\n    {\n        name: 'ACTIVE',\n        selector: 'cases.active',\n        sortable: true,\n        format: row => numberFormatter(row.cases.active),\n        right: true\n    },\n    {\n        name: 'NEW',\n        selector: 'cases.new',\n        sortable: true,\n        format: row => numberFormatter(row.cases.new),\n        right: true\n    },\n    {\n        name: 'CRITICAL',\n        selector: 'cases.critical',\n        sortable: true,\n        format: row => numberFormatter(row.cases.critical),\n        right: true\n    },\n    {\n        name: 'RECOVERED',\n        selector: 'cases.recovered',\n        sortable: true,\n        format: row => numberFormatter(row.cases.recovered),\n        right: true\n    },\n    {\n        name: 'DEATHS',\n        selector: 'deaths.total',\n        sortable: true,\n        format: row => numberFormatter(row.deaths.total),\n        right: true\n    }\n];\n\nexport default columns;","import React from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport TableColumns from \"./TableColumns\";\n\nclass CountryTable extends React.Component {\n\n    render() {\n        return(\n            <DataTable\n                columns={TableColumns}\n                data={this.props.statistics}\n                pagination={true}\n                paginationPerPage={10}\n                defaultSortField={'cases.total'}\n                defaultSortAsc={false}\n                highlightOnHover={true}\n            />\n        );\n    }\n}\n\nexport default CountryTable;","import React from \"react\";\n\nclass StatsCard extends React.Component {\n    render() {\n        return(\n            <div style={{...this.props.style, padding: '5px', borderRadius: '5px'}}>\n                <p style={{\n                    fontSize: '10px',\n                    fontWeight: 600,\n                    padding: '0px',\n                    margin:'0px'\n                }}>{this.props.title}</p>\n                <p style={{\n                    fontSize: '16px',\n                    fontWeight: 600,\n                    margin:'3px'\n                }}>{this.props.count ? this.props.count.toLocaleString() : this.props.count}</p>\n            </div>\n        )\n    }\n}\n\nexport default StatsCard;","import React from \"react\";\nimport StatsCard from \"./StatsCard\";\n\nclass SelectedCountryStats extends React.Component {\n    render() {\n        if (!this.props.selectedCountry) {\n            return null;\n        }\n        return(\n            <React.Fragment>\n                <p style={{\n                    fontSize: '18px',\n                    fontWeight: 600,\n                    textTransform: 'uppercase'\n                }}>{this.props.selectedCountry.country}</p>\n                <StatsCard\n                    style={{\n                        color: \"red\",\n                        backgroundColor: \"#FFCCCB\",\n                        marginBottom: '5px'\n                    }}\n                    title=\"CONFIRMED\"\n                    count={this.props.selectedCountry.cases.total}\n                />\n                <StatsCard\n                    style={{\n                        color: \"blue\",\n                        backgroundColor: \"#ADD8E6\",\n                        marginBottom: '5px'\n                    }}\n                    title=\"ACTIVE\"\n                    count={this.props.selectedCountry.cases.active}\n                />\n                <StatsCard\n                    style={{\n                        color: \"green\",\n                        backgroundColor: \"#90EE90\",\n                        marginBottom: '5px'\n                    }}\n                    title=\"RECOVERED\"\n                    count={this.props.selectedCountry.cases.recovered}\n                />\n                <StatsCard\n                    style={{\n                        color: \"grey\",\n                        backgroundColor: \"#D3D3D3\",\n                        marginBottom: '5px'\n                    }}\n                    title=\"DEATHS\"\n                    count={this.props.selectedCountry.deaths.total}\n                />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default SelectedCountryStats;","import React, {createRef} from \"react\";\nimport SelectedCountryStats from \"./SelectedCountryStats\";\nimport {Map, TileLayer} from \"react-leaflet\";\n\nclass WorldMap extends React.Component {\n    state = {\n        selectedCountry: {\n            country: 'China',\n            cases: {\n                new: 80,\n                total: 900,\n                active: 70,\n                recovered: 78\n            },\n            deaths: {\n                total: 100\n            }\n        },\n        center: {\n            lat: 40.8471,\n            lng: 14.0625\n        },\n        zoom: 2\n    };\n\n    renderMap() {\n        return(\n            <Map\n                center={this.state.center}\n                zoom={this.state.zoom}>\n                <TileLayer\n                    attribution='...'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    maxZoom=\"18\"\n                />\n            </Map>\n        )\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <h6>Hover over a country for more details</h6>\n                <div className=\"row\">\n                    <div className=\"col-md-2\">\n                        <SelectedCountryStats selectedCountry={this.state.selectedCountry}/>\n                    </div>\n                    <div className=\"col-md-10\" style={{height: '100%'}}>\n                        {this.renderMap()}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default WorldMap;","import React from \"react\";\n\nfunction TotalsCard(props) {\n    return(\n        <div className=\"text-center\" style={props.style}>\n            <p style={{\n                fontSize: '16px',\n                fontWeight: 600\n            }}>{props.title}</p>\n            <p style={{\n                fontSize: '20px',\n                fontWeight: 600\n            }}>{props.count ? props.count.toLocaleString() : props.count}</p>\n        </div>\n    )\n}\n\nexport default TotalsCard;","import React from \"react\";\nimport TotalsCard from \"./TotalsCard\";\n\nclass TotalsTable extends React.Component {\n\n    render() {\n        return(\n            <div className=\"row\">\n                <div className=\"col-lg-2 col-sm-4 col-xs-4\">\n                    <TotalsCard\n                        style={{\n                            color: \"#8B0000\"\n                        }}\n                        title=\"CONFIRMED\"\n                        count={this.props.totals.cases.total}\n                    />\n                </div>\n                <div className=\"col-lg-2 col-sm-4 col-xs-4\">\n                    <TotalsCard\n                        style={{\n                            color: \"blue\"\n                        }}\n                        title=\"ACTIVE\"\n                        count={this.props.totals.cases.active}\n                    />\n                </div>\n                <div className=\"col-lg-2 col-sm-4 col-xs-4\">\n                    <TotalsCard\n                        style={{\n                            color: \"red\"\n                        }}\n                        title=\"CRITICAL\"\n                        count={this.props.totals.cases.critical}\n                    />\n                </div>\n                <div className=\"col-lg-2 col-sm-4 col-xs-4\">\n                    <TotalsCard\n                        style={{\n                            color: \"brown\"\n                        }}\n                        title=\"NEW\"\n                        count={this.props.totals.cases.new}\n                    />\n                </div>\n                <div className=\"col-lg-2 col-sm-4 col-xs-4\">\n                    <TotalsCard\n                        style={{\n                            color: \"green\"\n                        }}\n                        title=\"RECOVERED\"\n                        count={this.props.totals.cases.recovered}\n                    />\n                </div>\n                <div className=\"col-lg-2 col-sm-4 col-xs-4\">\n                    <TotalsCard\n                        style={{\n                            color: \"grey\"\n                        }}\n                        title=\"DEATHS\"\n                        count={this.props.totals.deaths.total}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TotalsTable;","import axios from 'axios';\n\nconst client = axios.create({\n    baseURL: \"https://covid-193.p.rapidapi.com\"\n})\n\nclient.interceptors.request.use((request) => {\n    request.headers[\"x-rapidapi-host\"] =  \"covid-193.p.rapidapi.com\";\n    request.headers[\"x-rapidapi-key\"] = \"c70fc1a073msha3436ddc701e093p1fa48fjsncc32806fee38\";\n\n    return request;\n});\n\nexport default client;","import React from 'react';\nimport _ from 'lodash';\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/Footer\";\nimport CountryTable from \"./components/country-table/CountryTable\";\nimport WorldMap from \"./components/world-map/WorldMap\";\nimport TotalsTable from \"./components/totals-table/TotalsTable\";\nimport covid19api from \"./apis/covid19\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            statistics: [],\n            totals: {\n                cases: {},\n                deaths: {}\n            },\n            isLoading: true\n        };\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    fetchData() {\n        this.setState({\n            isLoading: true\n        })\n\n        covid19api.get(\"/statistics\")\n            .then((response) => {\n                let statistics = response.data.response;\n                let totals = _.find(statistics, {\n                    country: 'All'\n                });\n                _.remove(statistics, {\n                    country: 'All'\n                });\n                this.setState({\n                    statistics: statistics,\n                    totals: totals,\n                    isLoading: false\n                });\n            }).catch((error) => {\n                console.log(error);\n                this.setState({\n                    isLoading: false\n                })\n            });\n    }\n\n    showStats() {\n        if (this.state.isLoading) {\n            return(\n                <div className=\"col-lg-12 text-center\">\n                    <h4>Loading...</h4>\n                </div>\n            );\n        } else {\n            return(\n                <React.Fragment>\n                    <div className=\"col-lg-12\">\n                        <TotalsTable totals={this.state.totals}/>\n                    </div>\n                    <div className=\"col-lg-12\">\n                        <CountryTable statistics={this.state.statistics}/>\n                        {/*<WorldMap/>*/}\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Header/>\n                <div className=\"container\" style={{\n                    marginTop: '20px'\n                }}>\n                    <div className=\"row\">\n                        {this.showStats()}\n                    </div>\n                </div>\n                <Footer/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'leaflet/dist/leaflet.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}