{"version":3,"sources":["theme.js","apis/covid19.js","apis/recentNews.js","components/summary/SummaryCard.js","components/summary/Summary.js","components/country-table/CountryTable.js","components/header/Header.js","components/recent-news/Article.js","components/recent-news/RecentNews.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["typography","fontFamily","join","DefaultTheme","DarkTheme","palette","type","client","axios","create","baseURL","apiKeys","interceptors","request","use","apiKeyIndex","Math","floor","random","length","apiKey","headers","Authorization","summaryCard","props","Card","CardContent","Typography","align","className","variant","component","title","total","toLocaleString","summary","loading","Fragment","Grid","container","spacing","item","xs","Skeleton","height","cardsInfo","TotalConfirmed","TotalActive","TotalRecovered","TotalDeaths","map","card","key","sm","md","SummaryCard","animation","renderSummaryCards","CountryTable","React","useState","page","setPage","rowsPerPage","setRowsPerPage","countries","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","slice","country","CountryCode","scope","Country","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","useStyles","makeStyles","theme","rightContent","marginLeft","marginRight","lastUpdatedTitle","fontSize","textTransform","textAlign","breakpoints","down","lastUpdatedTime","ThemeToggle","icon","toggleTo","IconButton","onClick","toggleTheme","edge","color","Header","classes","AppBar","position","elevation","Toolbar","lastUpdatedAt","fromNow","source","readMore","padding","margin","marginTop","primary","main","article","name","publishedAt","Link","rel","href","url","recentNews","articles","articleList","idx","Article","dailyNewsSearchUri","encodeURI","Box","style","flexGrow","renderArticles","Footer","App","setState","state","this","fetchData","refreshDataHandler","setInterval","clearInterval","ThemeProvider","createMuiTheme","CssBaseline","Container","maxWidth","Summary","RecentNews","fetchCovidData","fetchArticles","covid19Api","get","response","data","Global","Countries","Date","recentNewsApi","params","language","q","pageSize","_","orderBy","obj","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c09e21e5.chunk.js","sourcesContent":["const typography = {\n    fontFamily: [\n        'Comfortaa', 'cursive'\n    ].join(','),\n};\n\nexport const DefaultTheme = {\n    typography: typography\n};\n\nexport const DarkTheme ={\n    typography: typography,\n    palette: {\n        type: \"dark\"\n    }\n};\n","import axios from 'axios';\n\nconst client = axios.create({\n    baseURL: \"https://api.covid19api.com\"\n})\n\nexport default client;","import axios from 'axios';\r\n\r\nconst apiKeys = [\r\n    \"f251266458e947ba94e465c731e10a2a\",\r\n    \"afbacd1a0f8a435e8971084223998783\"\r\n]\r\n\r\nconst client = axios.create({\r\n    baseURL: \"https://newsapi.org/v2\"\r\n})\r\n\r\nclient.interceptors.request.use((request) => {\r\n    const apiKeyIndex = Math.floor((Math.random() * apiKeys.length));\r\n    const apiKey = apiKeys[apiKeyIndex];\r\n\r\n    // Auth token\r\n    request.headers.Authorization = `Bearer ${apiKey}`;\r\n\r\n    // Default query parameters\r\n    // const defaultQueryParams = {\r\n    //     country: \"in\"\r\n    // };\r\n    //\r\n    // // Add pageSize in the end\r\n    // // It will override pageSize provided in query string\r\n    // request.params = { ...defaultQueryParams, ...request.params, pageSize: 100 };\r\n\r\n    return request;\r\n});\r\n\r\nexport default client;","import React from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst summaryCard = (props) => {\n    return(\n        <Card>\n            <CardContent>\n                <Typography align=\"center\" className={`text-${props.variant}`} component=\"p\">{props.title}</Typography>\n                <Typography align=\"center\" className={`text-${props.variant}`} component=\"p\">{props.total ? props.total.toLocaleString() : props.total}</Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default summaryCard;","import React from 'react';\nimport SummaryCard from './SummaryCard';\nimport Grid from \"@material-ui/core/Grid\";\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst summary = (props) => {\n    const { summary, loading } = props;\n    const renderSummaryCards = () => {\n        const cardsInfo = [\n            { variant: \"confirmed\", title: \"CONFIRMED\", total: summary.TotalConfirmed },\n            { variant: \"active\", title: \"ACTIVE\", total: summary.TotalActive },\n            { variant: \"recovered\", title: \"RECOVERED\", total: summary.TotalRecovered },\n            { variant: \"deceased\", title: \"DECEASED\", total: summary.TotalDeaths }\n        ];\n\n        return(\n            <Grid container spacing={1}>\n                {cardsInfo.map(card => {\n                    return(\n                        <Grid key={card.title} item xs={6} sm={6} md>\n                            <SummaryCard animation=\"wave\" variant={card.variant} title={card.title} total={card.total} />\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        )\n    }\n    const renderLoader = () => {\n        return(\n            <Grid container spacing={1}>\n                <Grid item xs>\n                    <Skeleton variant=\"rect\" height={100} />\n                </Grid>\n                <Grid item xs>\n                    <Skeleton variant=\"rect\" height={100} />\n                </Grid>\n                <Grid item xs>\n                    <Skeleton variant=\"rect\" height={100} />\n                </Grid>\n                <Grid item xs>\n                    <Skeleton variant=\"rect\" height={100} />\n                </Grid>\n            </Grid>\n        )\n    }\n\n    return(\n        <React.Fragment>\n            <h2>GLOBAL STATISTICS</h2>\n            { loading ? renderLoader() : renderSummaryCards() }\n        </React.Fragment>\n    )\n}\n\nexport default summary;","import React from 'react';\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nexport default function CountryTable (props) {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const { countries, loading } = props;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const renderTable = () => {\n        return(\n            <React.Fragment>\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"country-wise covid-19 information\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Country</TableCell>\n                                <TableCell align=\"right\">Confirmed</TableCell>\n                                <TableCell align=\"right\">Active</TableCell>\n                                <TableCell align=\"right\">Recovered</TableCell>\n                                <TableCell align=\"right\">Deceased</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {countries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((country) => (\n                                <TableRow key={country.CountryCode}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {country.Country}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{country.TotalConfirmed.toLocaleString()}</TableCell>\n                                    <TableCell align=\"right\">{(country.TotalConfirmed - country.TotalRecovered - country.TotalDeaths).toLocaleString()}</TableCell>\n                                    <TableCell align=\"right\">{country.TotalRecovered.toLocaleString()}</TableCell>\n                                    <TableCell align=\"right\">{country.TotalDeaths.toLocaleString()}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 15, 20]}\n                    component=\"div\"\n                    count={countries.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </React.Fragment>\n        )\n    }\n\n    const renderLoader = () => {\n        return(\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                    <Skeleton animation=\"wave\" variant=\"rect\" height={50} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Skeleton animation=\"wave\" variant=\"rect\" height={50} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Skeleton animation=\"wave\" variant=\"rect\" height={50} />\n                </Grid>\n            </Grid>\n        )\n    }\n\n    return(\n        <React.Fragment>\n            <h2>COUNTRY-WISE STATISTICS</h2>\n            {loading ? renderLoader() : renderTable()}\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport Moment from 'react-moment';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport DefaultTheme from \"@material-ui/icons/WbSunny\";\nimport DarkTheme from \"@material-ui/icons/NightsStayOutlined\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst useStyles = makeStyles(theme => ({\n    rightContent: {\n        marginLeft: \"auto\",\n        marginRight: -1\n    },\n    lastUpdatedTitle: {\n        fontSize: \"0.7rem\",\n        textTransform: \"uppercase\",\n        textAlign: \"right\",\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '0.6rem'\n        }\n    },\n    lastUpdatedTime: {\n        fontSize: \"0.8rem\",\n        textTransform: \"uppercase\",\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '0.7rem'\n        }\n    }\n}));\n\n\nconst ThemeToggle = props => {\n    const icon = props.theme === \"dark\" ? <DefaultTheme/> : <DarkTheme/>;\n    const toggleTo = props.theme === \"dark\" ? \"default\" : \"dark\";\n\n    return(\n        <IconButton onClick={() => props.toggleTheme(toggleTo)} edge=\"start\" color=\"inherit\" aria-label=\"theme-toggle\">\n            {icon}\n        </IconButton>\n    )\n}\n\nexport default function Header(props) {\n    const classes = useStyles();\n\n    const renderLastUpdatedAt = () => {\n        if (props.lastUpdatedAt) {\n            return(\n                <div className={classes.rightContent}>\n                    <Typography className={classes.lastUpdatedTitle} component=\"h6\">LAST UPDATED</Typography>\n                    <Typography className={classes.lastUpdatedTime} component=\"h6\"><Moment fromNow>{props.lastUpdatedAt}</Moment></Typography>\n                </div>\n            )\n        }\n\n        return null;\n    }\n\n    return(\n        <AppBar position=\"sticky\" color=\"default\" elevation={0}>\n            <Toolbar>\n                <ThemeToggle theme={props.theme} toggleTheme={(theme) => {props.toggleTheme(theme)}}/>\n                <Typography component=\"h1\">COVID-19 TRACKER</Typography>\n                {renderLastUpdatedAt()}\n            </Toolbar>\n        </AppBar>\n    )\n}","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    source: {\r\n        color: 'grey',\r\n        fontSize: \"0.9rem\",\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '0.7rem'\r\n        }\r\n    },\r\n    readMore: {\r\n        fontSize: \"0.9rem\",\r\n        padding: theme.spacing(0),\r\n        margin:theme.spacing(0),\r\n        marginTop: theme.spacing(1),\r\n        color: theme.palette.primary.main\r\n    }\r\n}));\r\n\r\nexport default function (props) {\r\n    const { article } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <h3>{article.title}</h3>\r\n                <span className={classes.source}>\r\n                    {article.source.name} - <Moment fromNow>{article.publishedAt}</Moment>\r\n                </span>\r\n                <p className={classes.readMore}>\r\n                    <Link rel=\"noopener noreferrer\" target=\"_blank\" href={article.url}>Read more</Link>\r\n                </p>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Article from './Article';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst recentNews = props => {\r\n    const {articles, loading} = props;\r\n\r\n    const renderArticles = () => {\r\n        const articleList = articles.map((article, idx) => {\r\n            return (\r\n                <Grid item xs={12} key={idx}>\r\n                    <Article article={article}/>\r\n                </Grid>\r\n            )\r\n        });\r\n        const dailyNewsSearchUri = encodeURI('https://naganandakk.github.io/daily-news/#/search?q=corona covid covid19 \"covid 19\" \"covid-19\"');\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {articleList}\r\n                <Box style={{flexGrow: 1, textAlign: \"center\", padding: \"5px\"}}>\r\n                    <Typography component=\"h6\">For more visit <Link rel=\"noopener noreferrer\" target=\"_blank\" href={dailyNewsSearchUri}>Daily\r\n                        News</Link></Typography>\r\n                </Box>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const renderLoader = () => {\r\n        return (\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <Skeleton animation=\"wave\" variant=\"rect\" height={100}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton animation=\"wave\" variant=\"rect\" height={100}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton animation=\"wave\" variant=\"rect\" height={100}/>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>RECENT NEWS</h2>\r\n            <Grid className=\"RecentNews-container\" container spacing={1}>\r\n                {loading ? renderLoader() : renderArticles()}\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default recentNews;","import React from 'react';\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nexport default function Footer() {\r\n    return(\r\n        <div style={{textAlign: \"center\", marginTop:\"15px\"}}>\r\n            <p>Developed by <Link target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/naganandakk\">Nagananda K K</Link></p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport _ from 'lodash';\nimport { DefaultTheme, DarkTheme } from './theme';\nimport covid19Api from './apis/covid19';\nimport recentNewsApi from './apis/recentNews';\nimport Container from '@material-ui/core/Container';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport './App.css';\nimport Summary from \"./components/summary/Summary\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CountryTable from \"./components/country-table/CountryTable\";\nimport Header from './components/header/Header';\nimport RecentNews from \"./components/recent-news/RecentNews\";\nimport Footer from \"./components/footer/Footer\";\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst MINUTE_5 = 1000 * 60 * 5;\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            summary: {},\n            countries: [],\n            articles: [],\n            lastUpdatedAt: null,\n            loading: {\n                articles: true,\n                summary: true,\n                countries: true\n            },\n            theme: \"default\"\n        }\n    }\n\n    toggleTheme = theme => {\n        this.setState({\n            theme: theme\n        })\n    }\n\n    componentDidMount() {\n        this.fetchData();\n        this.refreshDataHandler = setInterval(() => this.fetchData(), MINUTE_5);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.refreshDataHandler);\n    }\n\n    render() {\n        return (\n            <ThemeProvider theme={this.state.theme === \"dark\" ? createMuiTheme(DarkTheme) : createMuiTheme(DefaultTheme)}>\n                <CssBaseline />\n                <Header theme={this.state.theme} toggleTheme={this.toggleTheme} lastUpdatedAt={this.state.lastUpdatedAt}/>\n                <Container maxWidth=\"xl\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={7}>\n                            <Summary loading={this.state.loading.summary} summary={this.state.summary}/>\n                            <CountryTable loading={this.state.loading.countries} countries={this.state.countries}/>\n                        </Grid>\n                        <Grid item xs={12} sm={5}>\n                            <RecentNews loading={this.state.loading.articles} articles={this.state.articles}/>\n                        </Grid>\n                    </Grid>\n                </Container>\n                <Footer/>\n            </ThemeProvider>\n        );\n    }\n\n    fetchData() {\n        this.fetchCovidData();\n        this.fetchArticles();\n    }\n\n    async fetchCovidData() {\n        const response = await covid19Api.get(\"/summary\");\n        this.setState({\n            summary: {\n                ...response.data.Global,\n                \"TotalActive\": response.data.Global.TotalConfirmed - response.data.Global.TotalRecovered - response.data.Global.TotalDeaths\n            },\n            countries: response.data.Countries,\n            lastUpdatedAt: response.data.Date,\n            loading: {\n                ...this.state.loading,\n                summary: false,\n                countries: false\n            }\n        })\n    }\n\n    async fetchArticles() {\n        const response = await recentNewsApi.get(\"/everything\", {\n            params: {\n                language: \"en\",\n                q: 'corona covid covid19 \"covid 19\" \"covid-19\"',\n                pageSize: 5\n            }\n        });\n\n        this.setState({\n            articles: _.orderBy(response.data.articles,[\n                (obj) => {\n                    return new Date(obj.publishedAt);\n                }\n            ], [\"desc\"]),\n            loading: {\n                ...this.state.loading,\n                articles: false\n            }\n        });\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-comfortaa';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}